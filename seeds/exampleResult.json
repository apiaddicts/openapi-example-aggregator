{
  "openapi": "3.0.1",
  "info": {
    "title": "User Management API",
    "description": "API para la gesti√≥n de usuarios",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.example.com/v1"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Obtener lista de usuarios",
        "responses": {
          "200": {
            "description": "Lista de usuarios",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          }
        },
        "x-microcks-operation": {
          "delay": 100,
          "dispatcher": "SCRIPT",
          "dispatcherRules": "def headers = mockRequest.getRequestHeaders(); if (headers.hasValues(\"X-Microcks-Response-Name\")) { return headers.get(\"X-Microcks-Response-Name\", \"null\") }"
        }
      },
      "post": {
        "summary": "Crear un nuevo usuario",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario creado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "example-default": {
                    "value": {
                      "id": 3,
                      "name": "Alice Johnson",
                      "email": "alice.johnson@example.com"
                    }
                  }
                }
              }
            }
          }
        },
        "x-microcks-operation": {
          "delay": 100,
          "dispatcher": "SCRIPT",
          "dispatcherRules": "def headers = mockRequest.getRequestHeaders(); if (headers.hasValues(\"X-Microcks-Response-Name\")) { return headers.get(\"X-Microcks-Response-Name\", \"null\") }"
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Obtener un usuario por ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Datos del usuario",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "example-generated-200": {
                    "value": {
                      "id": 1,
                      "name": "John Doe",
                      "email": "JohnDoe@gmail.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 404,
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          }
        },
        "x-microcks-operation": {
          "delay": 100,
          "dispatcher": "SCRIPT",
          "dispatcherRules": "def headers = mockRequest.getRequestHeaders(); if (headers.hasValues(\"X-Microcks-Response-Name\")) { return headers.get(\"X-Microcks-Response-Name\", \"null\") }"
        }
      },
      "put": {
        "summary": "Actualizar un usuario por ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario actualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "example-generated-200": {
                    "value": {
                      "id": 1,
                      "name": "John Doe",
                      "email": "JohnDoe@gmail.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        },
        "x-microcks-operation": {
          "delay": 100,
          "dispatcher": "SCRIPT",
          "dispatcherRules": "def headers = mockRequest.getRequestHeaders(); if (headers.hasValues(\"X-Microcks-Response-Name\")) { return headers.get(\"X-Microcks-Response-Name\", \"null\") }"
        }
      }
    }
  },
  "components": {
    "responses": {
      "notFound": {
        "description": "Usuario no encontrado",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "example-schema-error": {
                "value": {
                  "code": 109,
                  "message": "testing"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "email"
        ],
        "example": {
          "id": 1,
          "name": "John Doe",
          "email": "JohnDoe@gmail.com"
        }
      },
      "UserList": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "required": [
          "users"
        ]
      },
      "NewUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email"
        ]
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "example": {
          "code": 109,
          "message": "testing"
        }
      }
    }
  }
}